{"version":3,"sources":["components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","App.js","index.js"],"names":["ContactForm","handleAddContact","useState","name","setName","number","setNumber","handleChangeForm","target","value","onSubmit","e","preventDefault","onAdd","id","uuidv4","type","pattern","title","required","onChange","ContactList","contacts","onRemove","length","map","contact","onClick","Filter","contactFilter","placeholder","initialState","App","localStorage","getItem","JSON","parse","getContactsFromLocalStorage","setContacts","setContactFilter","useEffect","setItem","stringify","filtredContacts","filter","toLowerCase","includes","newContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGe,SAASA,EAAYC,GAClC,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,OAAQN,GACN,IAAK,OACHC,EAAQK,GACR,MACF,IAAK,SACHH,EAAUG,GACV,MACF,QACE,SAeN,OACE,uBAAMC,SAZiB,SAAAC,GACvBA,EAAEC,kBAEFC,EADkBZ,EAAVY,OACF,CAAEC,GAAIC,cAAUZ,OAAME,YAS5B,UACE,uBACEW,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRV,MAAON,EACPiB,SAAUb,IAGZ,uBACES,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRV,MAAOJ,EACPe,SAAUb,IAGZ,wBAAQS,KAAK,SAAb,4BCtDN,IAceK,EAdK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/B,OAAwB,IAApBD,EAASE,OAAqB,KAEhC,6BACGF,EAASG,KAAI,SAAAC,GAAO,OACnB,+BACGA,EAAQvB,KADX,KACmBuB,EAAQrB,OACzB,wBAAQsB,QAAS,kBAAMJ,EAASG,EAAQZ,KAAxC,sBAFOY,EAAQZ,UCMVc,EAXA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAeT,EAAe,EAAfA,SAC/B,OACE,uBACEJ,KAAK,OACLI,SAAU,SAAAZ,GAAM,OAAIY,EAASZ,EAAOA,OAAOC,QAC3CA,MAAOoB,EACPC,YAAY,iBCAZC,EAAe,CACnB,CAAEjB,GAAI,OAAQX,KAAM,gBAAiBE,OAAQ,aAC7C,CAAES,GAAI,OAAQX,KAAM,iBAAkBE,OAAQ,aAC9C,CAAES,GAAI,OAAQX,KAAM,gBAAiBE,OAAQ,aAC7C,CAAES,GAAI,OAAQX,KAAM,iBAAkBE,OAAQ,cASjC,SAAS2B,IACtB,MAAgC9B,oBAC9B,kCARgC,WAClC,IAAMoB,EAAWW,aAAaC,QAAQ,YAEtC,OADuBC,KAAKC,MAAMd,GAM1Be,UAAN,QAAuCN,KADzC,mBAAOT,EAAP,KAAiBgB,EAAjB,KAGA,EAA0CpC,mBAAS,IAAnD,mBAAO2B,EAAP,KAAsBU,EAAtB,KAEAC,qBAAU,WACRP,aAAaQ,QAAQ,WAAYN,KAAKO,UAAUpB,MAC/C,CAACA,IAEJ,IAQMqB,EAAkBrB,EAASsB,QAAO,SAAAlB,GAAO,OAC7CA,EAAQvB,KAAK0C,cAAcC,SAASjB,EAAcgB,kBAGpD,OACE,qCACE,2CACA,cAAC7C,EAAD,CAAaa,MAfQ,SAAAkC,GACvBT,EAAY,GAAD,mBAAKhB,GAAL,CAAeyB,QAexB,0CACA,cAAC,EAAD,CAAQlB,cAAeA,EAAeT,SAAUmB,IAChD,cAAC,EAAD,CAAajB,SAAUqB,EAAiBpB,SAdhB,SAAAT,GAC1BwB,EAAYhB,EAASsB,QAAO,SAAAlB,GAAO,OAAIA,EAAQZ,KAAOA,YC7B1DkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b3e6fdb0.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function ContactForm(handleAddContact) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    const { onAdd } = handleAddContact;\r\n    onAdd({ id: uuidv4(), name, number });\r\n  };\r\n\r\n  // const resetForm = () => {\r\n  //   setName('');\r\n  //   setNumber('');\r\n  // };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        onChange={handleChangeForm}\r\n      />\r\n\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        onChange={handleChangeForm}\r\n      />\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","const ContactList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <li key={contact.id}>\r\n          {contact.name}: {contact.number}\r\n          <button onClick={() => onRemove(contact.id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","const Filter = ({ contactFilter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      onChange={target => onChange(target.target.value)}\r\n      value={contactFilter}\r\n      placeholder=\"Enter name \"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactList/ContactList';\nimport Filter from './components/filter/Filter';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst getContactsFromLocalStorage = () => {\n  const contacts = localStorage.getItem('contacts');\n  const parsedContacts = JSON.parse(contacts);\n  return parsedContacts;\n};\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    () => getContactsFromLocalStorage() ?? initialState,\n  );\n  const [contactFilter, setContactFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleAddContact = newContact => {\n    setContacts([...contacts, newContact]);\n  };\n\n  const handleRemoveContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  const filtredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(contactFilter.toLowerCase()),\n  );\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onAdd={handleAddContact} />\n      <h2>Contacts</h2>\n      <Filter contactFilter={contactFilter} onChange={setContactFilter} />\n      <ContactList contacts={filtredContacts} onRemove={handleRemoveContact} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}